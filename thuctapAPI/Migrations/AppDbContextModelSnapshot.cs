// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using thuctapAPI.Data;

#nullable disable

namespace thuctapAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("thuctapAPI.Model.Account", b =>
                {
                    b.Property<int>("IdAcc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAcc"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPosition")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAcc");

                    b.HasIndex("IdPosition");

                    b.HasIndex("IdRole");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("thuctapAPI.Model.AccountArea", b =>
                {
                    b.Property<int>("IdAcc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdArea")
                        .HasColumnType("int");

                    b.HasKey("IdAcc", "IdArea");

                    b.HasIndex("IdArea");

                    b.ToTable("AccountAreas");
                });

            modelBuilder.Entity("thuctapAPI.Model.AccountNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdAcc")
                        .HasColumnType("int");

                    b.Property<int>("IdNoti")
                        .HasColumnType("int");

                    b.Property<int>("IdReceiver")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdAcc");

                    b.HasIndex("IdNoti");

                    b.ToTable("AccountNotifications");
                });

            modelBuilder.Entity("thuctapAPI.Model.AccountSurveyRequest", b =>
                {
                    b.Property<int>("IdAcc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdSR")
                        .HasColumnType("int");

                    b.HasKey("IdAcc", "IdSR");

                    b.HasIndex("IdSR");

                    b.ToTable("AccountSurveyRequests");
                });

            modelBuilder.Entity("thuctapAPI.Model.Answer", b =>
                {
                    b.Property<int>("IdAnswer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAnswer"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdQuestion")
                        .HasColumnType("int");

                    b.Property<bool>("IsMultipleChoice")
                        .HasColumnType("bit");

                    b.HasKey("IdAnswer");

                    b.HasIndex("IdQuestion");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("thuctapAPI.Model.Area", b =>
                {
                    b.Property<int>("IdArea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdArea"), 1L, 1);

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdArea");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("thuctapAPI.Model.Article", b =>
                {
                    b.Property<int>("IdArticle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdArticle"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdArticle");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("thuctapAPI.Model.Baseline", b =>
                {
                    b.Property<int>("IdJob")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdJob"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCreator")
                        .HasColumnType("int");

                    b.Property<int>("IdManager")
                        .HasColumnType("int");

                    b.Property<int>("IdWarehouse")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("IdJob");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Baselines");
                });

            modelBuilder.Entity("thuctapAPI.Model.Broadcast", b =>
                {
                    b.Property<int>("IdB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdB"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdGroup")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdB");

                    b.ToTable("Broadcasts");
                });

            modelBuilder.Entity("thuctapAPI.Model.BroadcastGroup", b =>
                {
                    b.Property<int>("IdGroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGroup"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGroup");

                    b.ToTable("BroadcastGroups");
                });

            modelBuilder.Entity("thuctapAPI.Model.Job", b =>
                {
                    b.Property<int>("IdJob")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCreator")
                        .HasColumnType("int");

                    b.Property<int>("IdManager")
                        .HasColumnType("int");

                    b.Property<int>("IdWarehouse")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdJob");

                    b.HasIndex("IdWarehouse");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("thuctapAPI.Model.JobImage", b =>
                {
                    b.Property<int>("IdImg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdImg"), 1L, 1);

                    b.Property<DateTime>("DateTaken")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdJob")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdImg");

                    b.HasIndex("IdJob");

                    b.ToTable("JobImages");
                });

            modelBuilder.Entity("thuctapAPI.Model.Notification", b =>
                {
                    b.Property<int>("IdNoti")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNoti"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCreator")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNoti");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("thuctapAPI.Model.Position", b =>
                {
                    b.Property<int>("IdPos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPos"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPos");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("thuctapAPI.Model.Question", b =>
                {
                    b.Property<int>("IdQues")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdQues"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdQues");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("thuctapAPI.Model.Role", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRole"), 1L, 1);

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRole");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("thuctapAPI.Model.SurveyArticle", b =>
                {
                    b.Property<int>("IdSA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSA"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArticle")
                        .HasColumnType("int");

                    b.Property<int>("IdCreator")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSA");

                    b.HasIndex("IdArticle");

                    b.ToTable("SurveyArticles");
                });

            modelBuilder.Entity("thuctapAPI.Model.SurveyRequest", b =>
                {
                    b.Property<int>("IdSR")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSR"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCreator")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSR");

                    b.ToTable("SurveyRequests");
                });

            modelBuilder.Entity("thuctapAPI.Model.Visitor", b =>
                {
                    b.Property<int>("IdVisitor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVisitor"), 1L, 1);

                    b.Property<int>("IdAcc")
                        .HasColumnType("int");

                    b.Property<int>("IdWS")
                        .HasColumnType("int");

                    b.HasKey("IdVisitor");

                    b.HasIndex("IdAcc");

                    b.HasIndex("IdWS");

                    b.ToTable("Visitors");
                });

            modelBuilder.Entity("thuctapAPI.Model.Warehouse", b =>
                {
                    b.Property<int>("IdWS")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdWS"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCreator")
                        .HasColumnType("int");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdWS");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("thuctapAPI.Model.Account", b =>
                {
                    b.HasOne("thuctapAPI.Model.Position", "Position")
                        .WithMany()
                        .HasForeignKey("IdPosition")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("thuctapAPI.Model.Role", "Role")
                        .WithMany()
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("thuctapAPI.Model.AccountArea", b =>
                {
                    b.HasOne("thuctapAPI.Model.Account", null)
                        .WithMany()
                        .HasForeignKey("IdAcc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("thuctapAPI.Model.Area", null)
                        .WithMany()
                        .HasForeignKey("IdArea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("thuctapAPI.Model.AccountNotification", b =>
                {
                    b.HasOne("thuctapAPI.Model.Account", null)
                        .WithMany()
                        .HasForeignKey("IdAcc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("thuctapAPI.Model.Notification", null)
                        .WithMany()
                        .HasForeignKey("IdNoti")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("thuctapAPI.Model.AccountSurveyRequest", b =>
                {
                    b.HasOne("thuctapAPI.Model.Account", null)
                        .WithMany()
                        .HasForeignKey("IdAcc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("thuctapAPI.Model.SurveyRequest", null)
                        .WithMany()
                        .HasForeignKey("IdSR")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("thuctapAPI.Model.Answer", b =>
                {
                    b.HasOne("thuctapAPI.Model.Question", null)
                        .WithMany()
                        .HasForeignKey("IdQuestion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("thuctapAPI.Model.Baseline", b =>
                {
                    b.HasOne("thuctapAPI.Model.Warehouse", null)
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("thuctapAPI.Model.Job", b =>
                {
                    b.HasOne("thuctapAPI.Model.Account", null)
                        .WithMany()
                        .HasForeignKey("IdJob")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("thuctapAPI.Model.Warehouse", null)
                        .WithMany()
                        .HasForeignKey("IdWarehouse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("thuctapAPI.Model.JobImage", b =>
                {
                    b.HasOne("thuctapAPI.Model.Job", null)
                        .WithMany()
                        .HasForeignKey("IdJob")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("thuctapAPI.Model.SurveyArticle", b =>
                {
                    b.HasOne("thuctapAPI.Model.Article", null)
                        .WithMany()
                        .HasForeignKey("IdArticle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("thuctapAPI.Model.Visitor", b =>
                {
                    b.HasOne("thuctapAPI.Model.Account", null)
                        .WithMany()
                        .HasForeignKey("IdAcc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("thuctapAPI.Model.Warehouse", null)
                        .WithMany()
                        .HasForeignKey("IdWS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
